
# #Sample yml file to create a action to configure docker, push a image build and deploy to Google Cloud Run

# #üîç The Workflow: Step-by-Step Breakdown

# 1Ô∏è‚É£ Trigger the Workflow:

# 	‚Ä¢	This workflow is triggered automatically on every push to the main branch or on merging a pull request. This ensures continuous integration and delivery, keeping the application always up-to-date with the latest code.

# 2Ô∏è‚É£ Check Out the Code:

# 	‚Ä¢	The first step in the workflow checks out the code from the repository so that it‚Äôs available for building a Docker image.

# 3Ô∏è‚É£ Set Up Docker Buildx:

# 	‚Ä¢	Configures Docker Buildx, a powerful CLI plugin that provides advanced Docker build capabilities. This is especially useful for creating optimized, multi-platform images.

# 4Ô∏è‚É£ Authenticate to Google Cloud:

# 	‚Ä¢	This step uses a service account key stored securely in GitHub Secrets to authenticate the GitHub Actions runner with Google Cloud. It ensures only authorized workflows can deploy to your environment.

# 5Ô∏è‚É£ Configure Docker for GCR:

# 	‚Ä¢	Sets up Docker to use the Google Container Registry (GCR), allowing us to push Docker images securely.

# 6Ô∏è‚É£ Build and Push Docker Image:

# 	‚Ä¢	Builds a Docker image from the repository‚Äôs Dockerfile, tags it with the commit SHA for traceability, and pushes it to GCR.

# 7Ô∏è‚É£ Deploy to Google Cloud Run:

# 	‚Ä¢	Deploys the Docker image to Google Cloud Run, automatically updating the service with the new image.

# 8Ô∏è‚É£ Notify the Team via Slack:

# 	‚Ä¢	Sends a notification to our team‚Äôs Slack channel with deployment details, ensuring everyone stays updated.

name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: Build and Push Docker image
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/my-app:${{ github.sha }} .
        docker push gcr.io/$GCP_PROJECT_ID/my-app:${{ github.sha }}

    - name: Deploy to Google Cloud Run
      run: |
        gcloud run deploy my-app --image gcr.io/$GCP_PROJECT_ID/my-app:${{ github.sha }} --region us-central1 --platform managed --allow-unauthenticated

    - name: Notify via Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
